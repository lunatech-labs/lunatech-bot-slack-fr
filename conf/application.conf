
play.http.secret.key = "${APPLICATION_SECRET}"
play.editor="http://localhost:63342/api/file/?file=%s&line=%s"

## Internationalisation
# https://www.playframework.com/documentation/latest/JavaI18N
# https://www.playframework.com/documentation/latest/ScalaI18N
# ~~~~~
# Play comes with its own i18n settings, which allow the user's preferred language
# to map through to internal messages, or allow the language to be stored in a cookie.
play.i18n {
  # The application languages
  langs = [ "en" ]

  # Whether the language cookie should be secure or not
  #langCookieSecure = true

  # Whether the HTTP only attribute of the cookie should be set to true
  #langCookieHttpOnly = true
}

play.ws {
  # Sets HTTP requests not to follow 302 requests
  followRedirects = true
}

play.filters {

  # Enabled filters are run automatically against Play.
  # CSRFFilter, AllowedHostFilters, and SecurityHeadersFilters are enabled by default.
  #enabled += filters.ExampleFilter

  # Disabled filters remove elements from the enabled list.
  # disabled += play.filters.hosts.AllowedHostsFilter

  ## Allowed hosts filter configuration
  # https://www.playframework.com/documentation/latest/AllowedHostsFilter
  hosts {
    allowed = [".cleverapps.io",".lunatech.fr","lunatech.com","localhost:9000"]
  }

}

slack.api {
  token = ${SLACK_API_TOKEN}
  lunatechChannel = "#hackbreakfast-fr"
  lunatechChannel = ${? SLACK_CHANNEL}
  usersInfo.url = "https://slack.com/api/users.info"
  usersList.url = "https://slack.com/api/users.list"
  postMessage.url = "https://slack.com/api/chat.postMessage"
  conversations.open = "https://slack.com/api/conversations.open"
}

slack.bot {
  cron = "0 0 10 ? * 3"
  host = ${?SLACK_HOST_NAME}
  welcome.text="Bienvenue sur le bot RER - Lunatech :robot_face:"
}

# Define in a local conf file your variables for testing
# Do not store this override.conf file to Git
include "override.conf"